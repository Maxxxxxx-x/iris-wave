// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
	"net/netip"

	"github.com/oklog/ulid"
)

type Querier interface {
	AddPublicKey(ctx context.Context, arg AddPublicKeyParams) (Publickey, error)
	AddToken(ctx context.Context, arg AddTokenParams) (Token, error)
	AddTokenLogs(ctx context.Context, arg AddTokenLogsParams) (Tokenlog, error)
	AddUsageLogs(ctx context.Context, arg AddUsageLogsParams) (Usagelog, error)
	AddUser(ctx context.Context, arg AddUserParams) (User, error)
	AddUserLogs(ctx context.Context, arg AddUserLogsParams) (Userlog, error)
	DeleteLogsByTokenId(ctx context.Context, tokenid ulid.ULID) error
	DeletePublicKey(ctx context.Context, id ulid.ULID) error
	DeleteToken(ctx context.Context, id ulid.ULID) error
	DeleteTokenLog(ctx context.Context, id ulid.ULID) error
	DeleteUser(ctx context.Context, id ulid.ULID) error
	DeleteUserLogs(ctx context.Context, id ulid.ULID) error
	GetActiveTokensByCreatorId(ctx context.Context, creatorid ulid.ULID) ([]Token, error)
	GetAllPublicKeys(ctx context.Context) ([]Publickey, error)
	GetAllUsers(ctx context.Context) ([]User, error)
	GetExpiredTokens(ctx context.Context) ([]Token, error)
	GetExpiredTokensByCreatorId(ctx context.Context, creatorid ulid.ULID) ([]Token, error)
	GetInvalidTokens(ctx context.Context) ([]Token, error)
	GetInvalidTokensByCreatorId(ctx context.Context, creatorid ulid.ULID) ([]Token, error)
	GetPublicKey(ctx context.Context, id ulid.ULID) (Publickey, error)
	GetRevokedTokens(ctx context.Context) ([]Token, error)
	GetRevokedTokensByCreatorId(ctx context.Context, creatorid ulid.ULID) ([]Token, error)
	GetTokenById(ctx context.Context, id ulid.ULID) (Token, error)
	GetTokenLogs(ctx context.Context) ([]Tokenlog, error)
	GetTokenLogsByActionType(ctx context.Context, actiontype Tokenactions) ([]Tokenlog, error)
	GetTokenLogsByTokenId(ctx context.Context, userid ulid.ULID) ([]Tokenlog, error)
	GetTokenLogsByUserId(ctx context.Context, tokenid ulid.ULID) ([]Tokenlog, error)
	GetTokenUsage(ctx context.Context, tokenid ulid.ULID) ([]Usagelog, error)
	GetTokenUsageByIP(ctx context.Context, callerip netip.Prefix) ([]Usagelog, error)
	GetTokens(ctx context.Context) ([]Token, error)
	GetTokensByCreatorId(ctx context.Context, creatorid ulid.ULID) ([]Token, error)
	GetTokensByTokenName(ctx context.Context, tokenname string) (Token, error)
	GetUsageLogs(ctx context.Context) ([]Usagelog, error)
	GetUserByEmail(ctx context.Context, id ulid.ULID) (User, error)
	GetUserById(ctx context.Context, id ulid.ULID) (User, error)
	GetUserLogs(ctx context.Context) ([]Userlog, error)
	GetUserLogsByActionType(ctx context.Context, actiontype Useractions) ([]Userlog, error)
	GetUserLogsByIP(ctx context.Context, ipaddr netip.Prefix) ([]Userlog, error)
	GetUserLogsByUserId(ctx context.Context, userid ulid.ULID) ([]Userlog, error)
	GetUsersByRole(ctx context.Context, role Roles) ([]User, error)
	MarkRevoked(ctx context.Context, arg MarkRevokedParams) (Token, error)
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error
	UpdatePlatformRole(ctx context.Context, arg UpdatePlatformRoleParams) error
}

var _ Querier = (*Queries)(nil)
